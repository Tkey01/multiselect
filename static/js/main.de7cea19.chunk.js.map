{"version":3,"sources":["components/Multiselect/Multiselect.tsx","mocks/options.js","App.tsx","index.js"],"names":["Multiselect","props","inputRef","getResetScrollState","highlightOptionIndex","scrollPos","toggleOptionsList","setState","prevState","isOptionsListOpen","scrollAtOption","index","element","document","querySelectorAll","scrollMaxPos","state","scrollIntoView","scrollManaging","event","filteredOptions","keyCode","previousState","isScrollingByKeyboard","length","getArrayOfValues","options","map","option","name","selectOption","newOption","newSelectedOptions","getNewSelectedOptions","type","selectedOptions","getNewFilteredOptions","changeableOption","inputValue","arrayOfValues","onChange","unselectOption","deletedIndex","params","push","splice","getOptionsWithoutSelected","selectedOptionsIds","id","filter","includes","newFilteredOptions","toUpperCase","insertIndex","findIndex","filteredOption","console","log","onInputChange","target","value","onMouseOverFilteredOption","newScrollPos","onInputKeyDown","lastIndex","key","current","blur","preventDefault","onClickSelectedOptions","focus","onMouseDownSelectedOption","button","onClickSelectedOptionCloseBtn","stopPropagation","onMouseDownFilteredOption","onMouseMoveFilteredOptions","renderSelectedOptions","className","onClick","onMouseDown","onFocus","onBlur","onKeyDown","ref","renderFilteredOptions","onMouseMove","onMouseOver","newOptionsArray","React","createRef","placeholder","this","Fragment","containerClassName","PureComponent","defaultProps","randomOptions","countries","App","ReactDOM","render","getElementById"],"mappings":"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,EAAKZ,MAAQ,CACXU,QAAS8D,EACTrD,gBAAiB,GACjBf,gBAAiBoE,EACjB/E,mBAAmB,EACnB6B,WAAY,GACZlC,qBAAsB,EACtBC,UAAW,EACXU,aAAc,EACdQ,uBAAuB,GAGzB,EAAKrB,SAAWuF,IAAMC,YAnBc,EAHxC,qDA6VuB,IACXC,EAAgBC,KAAK3F,MAArB0F,YAER,OACE,kBAAC,IAAME,SAAP,KACE,4BAAKF,GACL,yBAAKb,UAAS,gCAA2Bc,KAAK3F,MAAM6F,oBAAsB,KACvEF,KAAKf,wBACLe,KAAKP,8BArWhB,GAAiCU,iBAApB/F,EAyBJgG,aAAe,CACpBL,YAAa,uBACbjE,QAAS,GACTc,SAAU,cC9CP,IAAMyD,EAAgcAGWC,EAAY,CACvB,cACA,UACA,UACA,iBACA,UACA,SACA,WACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,aACA,WACA,UACA,UACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,yBACA,WACA,SACA,iCACA,yBACA,oBACA,WACA,eACA,QACA,UACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,0BACA,WACA,UACA,oBACA,iBACA,eACA,aACA,UACA,UACA,SACA,iBACA,UACA,WACA,WACA,qBACA,aACA,UACA,cACA,QACA,oBACA,UACA,UACA,WACA,mBACA,gBACA,iCACA,OACA,UACA,SACA,gBACA,mBACA,wBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,6BACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,QACA,cACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,SACA,OACA,WACA,QACA,SACA,mBACA,WACA,OACA,cACA,mBACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,mBACA,eACA,wBACA,cACA,eACA,4BACA,gBACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,kBACA,UACA,eACA,gBACA,cACA,QACA,YACA,QACA,WACA,yBACA,SACA,YACA,cACA,QACA,SACA,aACA,WACA,WACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,2BACA,SACA,SACA,UACA,uBACA,iBACA,gBACA,UACA,aACA,UACA,eACA,UACA,YACA,oBACA,iBACA,QACA,SACA,YC9UWC,EAAM,kBACjB,yBAAKrB,UAAU,eACb,kBAAC,EAAD,CACEgB,mBAAoB,MACpBH,YAAY,wFACZjE,QAASwE,EACT1D,SAAU,SAACL,GAAsBqB,QAAQC,IAAI,wBAAyBtB,MAGxE,kBAAC,EAAD,CACE2D,mBAAoB,SACpBH,YAAY,wFACZjE,QAASuE,EACTzD,SAAU,SAACL,GAAsBqB,QAAQC,IAAI,6BAA8BtB,QCdjFiE,IAASC,OAAO,kBAAC,EAAD,MAASxF,SAASyF,eAAe,U","file":"static/js/main.de7cea19.chunk.js","sourcesContent":["import React, {\r\n  PureComponent,\r\n  KeyboardEvent,\r\n  MouseEvent,\r\n  ChangeEvent,\r\n  ReactNode,\r\n  RefObject\r\n} from 'react';\r\n\r\nimport {\r\n  TMultiselectProps,\r\n  TMultiselectState,\r\n  TMultiselectOption,\r\n  TMultiselectOptions,\r\n  TGetNewSelectedOptionsParams,\r\n  TGetNewFilteredOptionsParams\r\n} from './Multiselect.types'\r\n\r\nexport class Multiselect extends PureComponent<TMultiselectProps, TMultiselectState> {\r\n  private inputRef: RefObject<HTMLInputElement>;\r\n\r\n  constructor(props: TMultiselectProps) {\r\n    super(props);\r\n\r\n    const { options } = this.props;\r\n\r\n    const newOptionsArray = options.map((option, index) => ({ id: index, name: option }));\r\n\r\n    this.state = {\r\n      options: newOptionsArray,\r\n      selectedOptions: [],\r\n      filteredOptions: newOptionsArray,\r\n      isOptionsListOpen: false,\r\n      inputValue: '',\r\n      highlightOptionIndex: 0,\r\n      scrollPos: 0,\r\n      scrollMaxPos: 6,\r\n      isScrollingByKeyboard: false\r\n    }\r\n\r\n    this.inputRef = React.createRef<HTMLInputElement>();\r\n  }\r\n\r\n  static defaultProps = {\r\n    placeholder: 'Multiselect dropdown',\r\n    options: [],\r\n    onChange: () => {}\r\n  }\r\n\r\n  getResetScrollState = () => ({\r\n    highlightOptionIndex: 0,\r\n    scrollPos: 0\r\n  })\r\n\r\n  toggleOptionsList = () => {\r\n    this.setState(prevState => ({\r\n      isOptionsListOpen: !prevState.isOptionsListOpen,\r\n      ...this.getResetScrollState()\r\n    }))\r\n  }\r\n\r\n  scrollAtOption = (scrollPos: number, index: number): void => {\r\n    const element = document.querySelectorAll('.filtered-options span')[index];\r\n    const { scrollMaxPos } = this.state\r\n\r\n    if (element) {\r\n      if (scrollPos === 0) {\r\n        element.scrollIntoView(true);\r\n      }\r\n      if (scrollPos === scrollMaxPos) {\r\n        element.scrollIntoView(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollManaging = (event: KeyboardEvent) => {\r\n    const {\r\n      scrollMaxPos,\r\n      highlightOptionIndex,\r\n      filteredOptions\r\n    } = this.state;\r\n\r\n    // Если нажали стрелку вверх\r\n    if (event.keyCode === 38) {\r\n      if (highlightOptionIndex > 0) {\r\n        this.setState(previousState => {\r\n          const highlightOptionIndex = previousState.highlightOptionIndex - 1;\r\n          const scrollPos = previousState.scrollPos === 0 ? previousState.scrollPos : previousState.scrollPos - 1\r\n\r\n          this.scrollAtOption(scrollPos, highlightOptionIndex);\r\n\r\n          return {\r\n            highlightOptionIndex,\r\n            scrollPos,\r\n            isScrollingByKeyboard: true\r\n          };\r\n        });\r\n      }\r\n    }\r\n    // Если нажали стрелку вниз\r\n    else if (event.keyCode === 40) {\r\n      if (highlightOptionIndex < filteredOptions.length - 1) {\r\n        this.setState(previousState => {\r\n          const highlightOptionIndex = previousState.highlightOptionIndex + 1;\r\n          const scrollPos = previousState.scrollPos === scrollMaxPos ? previousState.scrollPos : previousState.scrollPos + 1\r\n\r\n          this.scrollAtOption(scrollPos, highlightOptionIndex);\r\n\r\n          return {\r\n            highlightOptionIndex,\r\n            scrollPos,\r\n            isScrollingByKeyboard: true\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getArrayOfValues = (options: TMultiselectOptions): string[] => options.map(option => option.name)\r\n\r\n  selectOption = (newOption: TMultiselectOption) => {\r\n    const newSelectedOptions = this.getNewSelectedOptions({ type: 1, newOption })\r\n\r\n    this.setState({\r\n      selectedOptions: newSelectedOptions,\r\n      filteredOptions: this.getNewFilteredOptions({ type: 1, changeableOption: newOption }),\r\n      inputValue: '',\r\n      ...this.getResetScrollState()\r\n    });\r\n\r\n    this.scrollAtOption(0, 0)\r\n\r\n    const arrayOfValues = this.getArrayOfValues(newSelectedOptions)\r\n    this.props.onChange(arrayOfValues)\r\n  }\r\n\r\n  unselectOption = (option: TMultiselectOption, deletedIndex: number): void => {\r\n    const { inputValue } = this.state;\r\n\r\n    const newSelectedOptions = this.getNewSelectedOptions({ type: 2, deletedIndex })\r\n\r\n    this.setState({\r\n      selectedOptions: newSelectedOptions,\r\n      filteredOptions: this.getNewFilteredOptions({ type: 3, inputValue, changeableOption: option }),\r\n    });\r\n\r\n    const arrayOfValues = this.getArrayOfValues(newSelectedOptions)\r\n    this.props.onChange(arrayOfValues)\r\n  }\r\n\r\n  getNewSelectedOptions = (params: TGetNewSelectedOptionsParams): TMultiselectOptions => {\r\n    const { selectedOptions } = this.state\r\n\r\n    let newSelectedOptions = [...selectedOptions]\r\n\r\n    // В случае добавления опции в список (параметр deletedIndex не нужен)\r\n    if (params.type === 1) {\r\n      newSelectedOptions.push(params.newOption)\r\n    }\r\n    // В случае удаления опции из списка выбранных\r\n    else if (params.type === 2) {\r\n      newSelectedOptions.splice(params.deletedIndex, 1);\r\n    }\r\n\r\n    return newSelectedOptions\r\n  }\r\n\r\n  getOptionsWithoutSelected = (): TMultiselectOptions => {\r\n    const { selectedOptions, options } = this.state\r\n\r\n    let selectedOptionsIds = selectedOptions.map(option => option.id)\r\n    const res = options.filter(option => !selectedOptionsIds.includes(option.id))\r\n\r\n    return res\r\n  }\r\n\r\n  getNewFilteredOptions = (params: TGetNewFilteredOptionsParams): TMultiselectOptions => {\r\n    const { filteredOptions } = this.state;\r\n    let newFilteredOptions: TMultiselectOptions = []\r\n\r\n    // В случае добавления опции в список выбранных\r\n    if (params.type === 1) {\r\n      newFilteredOptions = this.getOptionsWithoutSelected()\r\n        .filter(option => option.id !== params.changeableOption.id)\r\n    }\r\n    // В случае изменения значения инпута (параметр changeableOption не нужен)\r\n    else if (params.type === 2) {\r\n      newFilteredOptions = this.getOptionsWithoutSelected()\r\n        .filter(option => option.name.toUpperCase().includes(params.inputValue.toUpperCase()))\r\n    }\r\n    // В случае удаления опции из списка выбранных\r\n    else if (params.type === 3) {\r\n      newFilteredOptions = [...filteredOptions];\r\n\r\n      if (params.changeableOption.name.includes(params.inputValue)) {\r\n        let insertIndex = newFilteredOptions.findIndex((filteredOption) => filteredOption.id > params.changeableOption.id);\r\n\r\n        if (insertIndex !== -1) {\r\n          newFilteredOptions.splice(insertIndex, 0, { id: params.changeableOption.id, name: params.changeableOption.name });\r\n        } else {\r\n          newFilteredOptions.push({ id: params.changeableOption.id, name: params.changeableOption.name });\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(newFilteredOptions)\r\n\r\n    return newFilteredOptions\r\n  }\r\n\r\n  onInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const inputValue = event.target.value\r\n\r\n    this.setState({\r\n      filteredOptions: this.getNewFilteredOptions({ type: 2, inputValue }),\r\n      inputValue,\r\n      ...this.getResetScrollState()\r\n    });\r\n\r\n    this.scrollAtOption(0, 0)\r\n  }\r\n\r\n  onMouseOverFilteredOption = (index: number): void => {\r\n    const {\r\n      scrollMaxPos,\r\n      isScrollingByKeyboard\r\n    } = this.state;\r\n\r\n    if (isScrollingByKeyboard) return\r\n\r\n    this.setState(previousState => {\r\n      let newScrollPos = previousState.scrollPos + (index - previousState.highlightOptionIndex);\r\n      if (newScrollPos < 0) {\r\n        newScrollPos = 0;\r\n      } else if (newScrollPos > scrollMaxPos) {\r\n        newScrollPos = scrollMaxPos;\r\n      }\r\n\r\n      return {\r\n        highlightOptionIndex: index,\r\n        scrollPos: newScrollPos\r\n      }\r\n    });\r\n  }\r\n\r\n  onInputKeyDown = (event: KeyboardEvent): void => {\r\n    const {\r\n      highlightOptionIndex,\r\n      filteredOptions,\r\n      selectedOptions,\r\n      inputValue\r\n    } = this.state;\r\n\r\n    if (event.keyCode === 8 && !inputValue && selectedOptions.length) {\r\n      const lastIndex = selectedOptions.length - 1;\r\n      this.unselectOption(selectedOptions[lastIndex], lastIndex);\r\n    }\r\n\r\n    if (event.key === 'Escape' && this.inputRef && this.inputRef.current) {\r\n      this.inputRef.current.blur();\r\n    }\r\n\r\n    if ((event.keyCode === 38 || event.keyCode === 40) && filteredOptions.length > 1) {\r\n      event.preventDefault()\r\n\r\n      this.scrollManaging(event);\r\n    }\r\n\r\n    if (event.key === \"Enter\" && filteredOptions.length) {\r\n      this.selectOption(filteredOptions[highlightOptionIndex]);\r\n    }\r\n  }\r\n\r\n  onClickSelectedOptions = (): void => {\r\n    if (this.inputRef && this.inputRef.current) {\r\n      this.inputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  onMouseDownSelectedOption = (event: MouseEvent, option: TMultiselectOption, index: number): void => {\r\n    event.preventDefault()\r\n\r\n    if (event.button === 1) {\r\n      this.unselectOption(option, index)\r\n    }\r\n  }\r\n\r\n  onClickSelectedOptionCloseBtn = (event: MouseEvent, option: TMultiselectOption, index: number): void => {\r\n    event.stopPropagation();\r\n\r\n    this.unselectOption(option, index)\r\n  }\r\n\r\n  onMouseDownFilteredOption = (event: MouseEvent, option: TMultiselectOption): void => {\r\n    event.preventDefault()\r\n\r\n    this.selectOption(option)\r\n  }\r\n\r\n  onMouseMoveFilteredOptions = (): void => {\r\n    const { isScrollingByKeyboard } = this.state\r\n    if (isScrollingByKeyboard) {\r\n      this.setState({\r\n        isScrollingByKeyboard: false\r\n      })\r\n    }\r\n  }\r\n\r\n  renderSelectedOptions = (): ReactNode => {\r\n    const { selectedOptions, inputValue } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"selected-options\"\r\n        onClick={this.onClickSelectedOptions}\r\n      >\r\n        {selectedOptions.map((option, index) => (\r\n          <span\r\n            key={option.id}\r\n            onMouseDown={(event) => this.onMouseDownSelectedOption(event, option, index)}\r\n            className=\"selected-options__option\"\r\n          >\r\n            {option.name}\r\n            <button onClick={(event) => this.onClickSelectedOptionCloseBtn(event, option, index)}>✖</button>\r\n          </span>\r\n        ))}\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onInputChange}\r\n          onFocus={this.toggleOptionsList}\r\n          onBlur={this.toggleOptionsList}\r\n          onKeyDown={this.onInputKeyDown}\r\n          value={inputValue}\r\n          ref={this.inputRef}\r\n          className=\"selected-options__text-field\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilteredOptions = (): ReactNode => {\r\n    const {\r\n      filteredOptions,\r\n      isOptionsListOpen,\r\n      highlightOptionIndex\r\n    } = this.state;\r\n\r\n    return isOptionsListOpen && (\r\n      <div\r\n        className=\"filtered-options\"\r\n        onMouseMove={this.onMouseMoveFilteredOptions}\r\n      >\r\n        {filteredOptions.map((option, index) => (\r\n          <span\r\n            key={option.id}\r\n            onMouseDown={(event) => this.onMouseDownFilteredOption(event, option)}\r\n            className={`\r\n              filtered-options__option\r\n              ${highlightOptionIndex === index ? 'highlight' : ''}\r\n            `}\r\n            onMouseOver={() => this.onMouseOverFilteredOption(index)}\r\n          >{option.name}</span>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(): ReactNode {\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>{placeholder}</h2>\r\n        <div className={`multiselect-container ${this.props.containerClassName || ''}`}>\r\n          {this.renderSelectedOptions()}\r\n          {this.renderFilteredOptions()}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","export const randomOptions = [\r\n  'option-1',\r\n  'option-2',\r\n  'option-3',\r\n  'option-4',\r\n  'option-5',\r\n  'option-6',\r\n  'option-7',\r\n  'option-8',\r\n  'option-9',\r\n  'option-10',\r\n  'option-11',\r\n  'option-12',\r\n  'option-13',\r\n  'option-14',\r\n  'option-15',\r\n  'option-16',\r\n  'option-17',\r\n  'option-18',\r\n  'option-19',\r\n  'option-20',\r\n  'option-21',\r\n  'option-22',\r\n  'option-23',\r\n  'option-24',\r\n  'option-25',\r\n  'option-26',\r\n  'option-27',\r\n  'option-28',\r\n  'option-29',\r\n  'option-30',\r\n  'option-31',\r\n  'option-32',\r\n  'option-33',\r\n  'option-34',\r\n  'option-35',\r\n  'option-36',\r\n  'option-37',\r\n  'option-38',\r\n  'option-39',\r\n  'option-40',\r\n  'option-41',\r\n  'option-42',\r\n  'option-43',\r\n  'option-44',\r\n  'option-45',\r\n  'option-46',\r\n  'option-47',\r\n  'option-48',\r\n  'option-49',\r\n  'option-50',\r\n  'option-51',\r\n  'option-52',\r\n  'option-53',\r\n  'option-54',\r\n  'option-55',\r\n  'option-56',\r\n  'option-57',\r\n  'option-58',\r\n  'option-59',\r\n  'option-60',\r\n  'option-61',\r\n  'option-62',\r\n  'option-63',\r\n  'option-64',\r\n  'option-65',\r\n  'option-66',\r\n  'option-67',\r\n  'option-68',\r\n  'option-69',\r\n  'option-70',\r\n  'option-71',\r\n  'option-72',\r\n  'option-73',\r\n  'option-74',\r\n  'option-75',\r\n  'option-76',\r\n  'option-77',\r\n  'option-78',\r\n  'option-79',\r\n  'option-80',\r\n  'option-81',\r\n  'option-82',\r\n  'option-83',\r\n  'option-84',\r\n  'option-85',\r\n  'option-86',\r\n  'option-87',\r\n  'option-88',\r\n  'option-89',\r\n  'option-90',\r\n  'option-91',\r\n  'option-92',\r\n  'option-93',\r\n  'option-94',\r\n  'option-95',\r\n  'option-96',\r\n  'option-97',\r\n  'option-98',\r\n  'option-99',\r\n  'option-100'\r\n]\r\n\r\nexport const countries = [\r\n  'Afghanistan',\r\n  'Albania',\r\n  'Algeria',\r\n  'American Samoa',\r\n  'Andorra',\r\n  'Angola',\r\n  'Anguilla',\r\n  'Antigua and Barbuda',\r\n  'Argentina',\r\n  'Armenia',\r\n  'Aruba',\r\n  'Australia',\r\n  'Austria',\r\n  'Azerbaijan',\r\n  'Bangladesh',\r\n  'Barbados',\r\n  'Bahamas',\r\n  'Bahrain',\r\n  'Belarus',\r\n  'Belgium',\r\n  'Belize',\r\n  'Benin',\r\n  'Bermuda',\r\n  'Bhutan',\r\n  'Bolivia',\r\n  'Bosnia and Herzegovina',\r\n  'Botswana',\r\n  'Brazil',\r\n  'British Indian Ocean Territory',\r\n  'British Virgin Islands',\r\n  'Brunei Darussalam',\r\n  'Bulgaria',\r\n  'Burkina Faso',\r\n  'Burma',\r\n  'Burundi',\r\n  'Cambodia',\r\n  'Cameroon',\r\n  'Canada',\r\n  'Cape Verde',\r\n  'Cayman Islands',\r\n  'Central African Republic',\r\n  'Chad',\r\n  'Chile',\r\n  'China',\r\n  'Christmas Island',\r\n  'Cocos (Keeling) Islands',\r\n  'Colombia',\r\n  'Comoros',\r\n  'Congo-Brazzaville',\r\n  'Congo-Kinshasa',\r\n  'Cook Islands',\r\n  'Costa Rica',\r\n  'Croatia',\r\n  'Cura?ao',\r\n  'Cyprus',\r\n  'Czech Republic',\r\n  'Denmark',\r\n  'Djibouti',\r\n  'Dominica',\r\n  'Dominican Republic',\r\n  'East Timor',\r\n  'Ecuador',\r\n  'El Salvador',\r\n  'Egypt',\r\n  'Equatorial Guinea',\r\n  'Eritrea',\r\n  'Estonia',\r\n  'Ethiopia',\r\n  'Falkland Islands',\r\n  'Faroe Islands',\r\n  'Federated States of Micronesia',\r\n  'Fiji',\r\n  'Finland',\r\n  'France',\r\n  'French Guiana',\r\n  'French Polynesia',\r\n  'French Southern Lands',\r\n  'Gabon',\r\n  'Gambia',\r\n  'Georgia',\r\n  'Germany',\r\n  'Ghana',\r\n  'Gibraltar',\r\n  'Greece',\r\n  'Greenland',\r\n  'Grenada',\r\n  'Guadeloupe',\r\n  'Guam',\r\n  'Guatemala',\r\n  'Guernsey',\r\n  'Guinea',\r\n  'Guinea-Bissau',\r\n  'Guyana',\r\n  'Haiti',\r\n  'Heard and McDonald Islands',\r\n  'Honduras',\r\n  'Hong Kong',\r\n  'Hungary',\r\n  'Iceland',\r\n  'India',\r\n  'Indonesia',\r\n  'Iraq',\r\n  'Ireland',\r\n  'Isle of Man',\r\n  'Israel',\r\n  'Italy',\r\n  'Jamaica',\r\n  'Japan',\r\n  'Jersey',\r\n  'Jordan',\r\n  'Kazakhstan',\r\n  'Kenya',\r\n  'Kiribati',\r\n  'Kuwait',\r\n  'Kyrgyzstan',\r\n  'Laos',\r\n  'Latvia',\r\n  'Lebanon',\r\n  'Lesotho',\r\n  'Liberia',\r\n  'Libya',\r\n  'Liechtenstein',\r\n  'Lithuania',\r\n  'Luxembourg',\r\n  'Macau',\r\n  'Macedonia',\r\n  'Madagascar',\r\n  'Malawi',\r\n  'Malaysia',\r\n  'Maldives',\r\n  'Mali',\r\n  'Malta',\r\n  'Marshall Islands',\r\n  'Martinique',\r\n  'Mauritania',\r\n  'Mauritius',\r\n  'Mayotte',\r\n  'Mexico',\r\n  'Moldova',\r\n  'Monaco',\r\n  'Mongolia',\r\n  'Montenegro',\r\n  'Montserrat',\r\n  'Morocco',\r\n  'Mozambique',\r\n  'Namibia',\r\n  'Nauru',\r\n  'Nepal',\r\n  'Netherlands',\r\n  'New Caledonia',\r\n  'New Zealand',\r\n  'Nicaragua',\r\n  'Niger',\r\n  'Nigeria',\r\n  'Niue',\r\n  'Norfolk Island',\r\n  'Northern Mariana Islands',\r\n  'Norway',\r\n  'Oman',\r\n  'Pakistan',\r\n  'Palau',\r\n  'Panama',\r\n  'Papua New Guinea',\r\n  'Paraguay',\r\n  'Peru',\r\n  'Philippines',\r\n  'Pitcairn Islands',\r\n  'Poland',\r\n  'Portugal',\r\n  'Puerto Rico',\r\n  'Qatar',\r\n  'R?union',\r\n  'Romania',\r\n  'Russia',\r\n  'Rwanda',\r\n  'Saint Barth?lemy',\r\n  'Saint Helena',\r\n  'Saint Kitts and Nevis',\r\n  'Saint Lucia',\r\n  'Saint Martin',\r\n  'Saint Pierre and Miquelon',\r\n  'Saint Vincent',\r\n  'Samoa',\r\n  'San Marino',\r\n  'S?o Tom? and Pr?ncipe',\r\n  'Saudi Arabia',\r\n  'Senegal',\r\n  'Serbia',\r\n  'Seychelles',\r\n  'Sierra Leone',\r\n  'Singapore',\r\n  'Sint Maarten',\r\n  'Slovakia',\r\n  'Slovenia',\r\n  'Solomon Islands',\r\n  'Somalia',\r\n  'South Africa',\r\n  'South Georgia',\r\n  'South Korea',\r\n  'Spain',\r\n  'Sri Lanka',\r\n  'Sudan',\r\n  'Suriname',\r\n  'Svalbard and Jan Mayen',\r\n  'Sweden',\r\n  'Swaziland',\r\n  'Switzerland',\r\n  'Syria',\r\n  'Taiwan',\r\n  'Tajikistan',\r\n  'Tanzania',\r\n  'Thailand',\r\n  'Togo',\r\n  'Tokelau',\r\n  'Tonga',\r\n  'Trinidad and Tobago',\r\n  'Tunisia',\r\n  'Turkey',\r\n  'Turkmenistan',\r\n  'Turks and Caicos Islands',\r\n  'Tuvalu',\r\n  'Uganda',\r\n  'Ukraine',\r\n  'United Arab Emirates',\r\n  'United Kingdom',\r\n  'United States',\r\n  'Uruguay',\r\n  'Uzbekistan',\r\n  'Vanuatu',\r\n  'Vatican City',\r\n  'Vietnam',\r\n  'Venezuela',\r\n  'Wallis and Futuna',\r\n  'Western Sahara',\r\n  'Yemen',\r\n  'Zambia',\r\n  'Zimbabwe'\r\n]\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Multiselect } from './components/Multiselect';\r\n\r\nimport { countries, randomOptions } from './mocks/options'\r\n\r\nexport const App = () => (\r\n  <div className=\"app-wrapper\">\r\n    <Multiselect\r\n      containerClassName={'top'}\r\n      placeholder='Выберите страны'\r\n      options={countries}\r\n      onChange={(selectedOptions) => { console.log('Selected countries - ', selectedOptions) }}\r\n    />\r\n\r\n    <Multiselect\r\n      containerClassName={'bottom'}\r\n      placeholder='Рандомные опции'\r\n      options={randomOptions}\r\n      onChange={(selectedOptions) => { console.log('Selected random options - ', selectedOptions) }}\r\n    />\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}