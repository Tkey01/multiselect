{"version":3,"sources":["Multiselect.js","options.js","App.js","index.js"],"names":["Multiselect","props","getResetScrollState","highlightOptionIndex","scrollPos","toggleOptionsList","event","setState","prevState","isOptionsListOpen","scrollAtOption","index","element","document","querySelectorAll","scrollMaxPos","state","scrollIntoView","scrollManaging","filteredOptions","keyCode","previousState","isScrollingByKeyboard","length","getArrayOfValues","options","map","option","name","selectOption","newOption","inputValue","newSelectedOptions","getNewSelectedOptions","type","selectedOptions","getNewFilteredOptions","changeableOption","arrayOfValues","onChange","unselectOption","deletedIndex","push","splice","newFilteredOptions","filter","id","newSelectedOptionsIds","toUpperCase","includes","insertIndex","findIndex","filteredOption","onInputChange","target","value","onMouseOverFilteredOption","newScrollPos","onInputKeyDown","lastIndex","key","inputRef","current","blur","preventDefault","onClickSelectedOptions","focus","onMouseDownSelectedOption","button","onClickSelectedOptionCloseBtn","stopPropagation","onMouseDownFilteredOption","onMouseMoveFilteredOptions","renderSelectedOptions","className","onClick","onMouseDown","onFocus","onBlur","onKeyDown","ref","renderFilteredOptions","onMouseMove","onMouseOver","newOptionsArray","React","createRef","placeholder","this","Fragment","containerClassName","Component","defaultProps","randomOptions","countries","App","style","width","margin","console","log","ReactDOM","render","getElementById"],"mappings":"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AMC,YAnBL,EADrB,qDAyUY,IACAC,EAAgBC,KAAKvF,MAArBsF,YAER,OACE,kBAAC,IAAME,SAAP,KACE,4BAAKF,GACL,yBAAKb,UAAS,gCAA2Bc,KAAKvF,MAAMyF,oBAAsB,KACvEF,KAAKf,wBACLe,KAAKP,8BAjVhB,GAAiCU,aA+VjC3F,EAAY4F,aAAe,CACzBL,YAAa,uBACb9D,QAAS,GACTc,SAAU,cCrWL,IAAMsD,EAAgcAGWC,EAAY,CACvB,cACA,UACA,UACA,iBACA,UACA,SACA,WACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,aACA,WACA,UACA,UACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,yBACA,WACA,SACA,iCACA,yBACA,oBACA,WACA,eACA,QACA,UACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,0BACA,WACA,UACA,oBACA,iBACA,eACA,aACA,UACA,UACA,SACA,iBACA,UACA,WACA,WACA,qBACA,aACA,UACA,cACA,QACA,oBACA,UACA,UACA,WACA,mBACA,gBACA,iCACA,OACA,UACA,SACA,gBACA,mBACA,wBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,6BACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,QACA,cACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,SACA,OACA,WACA,QACA,SACA,mBACA,WACA,OACA,cACA,mBACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,mBACA,eACA,wBACA,cACA,eACA,4BACA,gBACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,kBACA,UACA,eACA,gBACA,cACA,QACA,YACA,QACA,WACA,yBACA,SACA,YACA,cACA,QACA,SACA,aACA,WACA,WACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,2BACA,SACA,SACA,UACA,uBACA,iBACA,gBACA,UACA,aACA,UACA,eACA,UACA,YACA,oBACA,iBACA,QACA,SACA,YC1TaC,MApBf,WACE,OACE,yBAAKC,MAAO,CAAEC,MAAO,QAASC,OAAQ,eACpC,kBAAC,EAAD,CACER,mBAAoB,MACpBH,YAAY,wFACZ9D,QAASqE,EACTvD,SAAU,SAACJ,GAAsBgE,QAAQC,IAAI,wBAAyBjE,MAGxE,kBAAC,EAAD,CACEuD,mBAAoB,SACpBH,YAAY,wFACZ9D,QAASoE,EACTtD,SAAU,SAACJ,GAAsBgE,QAAQC,IAAI,6BAA8BjE,QCfnFkE,IAASC,OAAO,kBAAC,EAAD,MAASzF,SAAS0F,eAAe,U","file":"static/js/main.82e9bc1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Multiselect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { options } = this.props;\r\n\r\n    const newOptionsArray = options.map((option, index) => ({ id: index, name: option }));\r\n\r\n    this.state = {\r\n      options: newOptionsArray,\r\n      selectedOptions: [],\r\n      filteredOptions: newOptionsArray,\r\n      isOptionsListOpen: false,\r\n      inputValue: '',\r\n      highlightOptionIndex: 0,\r\n      scrollPos: 0,\r\n      scrollMaxPos: 6,\r\n      isScrollingByKeyboard: false\r\n    }\r\n\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  getResetScrollState = () => ({\r\n    highlightOptionIndex: 0,\r\n    scrollPos: 0\r\n  })\r\n\r\n  toggleOptionsList = (event) => {\r\n    this.setState(prevState => ({\r\n      isOptionsListOpen: !prevState.isOptionsListOpen,\r\n      ...this.getResetScrollState()\r\n    }))\r\n  }\r\n\r\n  scrollAtOption = (scrollPos, index) => {\r\n    const element = document.querySelectorAll('.filtered-options span')[index];\r\n    const { scrollMaxPos } = this.state\r\n\r\n    if (element) {\r\n      if (scrollPos === 0) {\r\n        element.scrollIntoView(true);\r\n      }\r\n      if (scrollPos === scrollMaxPos) {\r\n        element.scrollIntoView(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollManaging = (event) => {\r\n    const {\r\n      scrollMaxPos,\r\n      highlightOptionIndex,\r\n      filteredOptions\r\n    } = this.state;\r\n\r\n    // Если нажали стрелку вверх\r\n    if (event.keyCode === 38) {\r\n      if (highlightOptionIndex > 0) {\r\n        this.setState(previousState => {\r\n          const highlightOptionIndex = previousState.highlightOptionIndex - 1;\r\n          const scrollPos = previousState.scrollPos === 0 ? previousState.scrollPos : previousState.scrollPos - 1\r\n\r\n          this.scrollAtOption(scrollPos, highlightOptionIndex);\r\n\r\n          return {\r\n            highlightOptionIndex,\r\n            scrollPos,\r\n            isScrollingByKeyboard: true\r\n          };\r\n        });\r\n      }\r\n    }\r\n    // Если нажали стрелку вниз\r\n    else if (event.keyCode === 40) {\r\n      if (highlightOptionIndex < filteredOptions.length - 1) {\r\n        this.setState(previousState => {\r\n          const highlightOptionIndex = previousState.highlightOptionIndex + 1;\r\n          const scrollPos = previousState.scrollPos === scrollMaxPos ? previousState.scrollPos : previousState.scrollPos + 1\r\n\r\n          this.scrollAtOption(scrollPos, highlightOptionIndex);\r\n\r\n          return {\r\n            highlightOptionIndex,\r\n            scrollPos,\r\n            isScrollingByKeyboard: true\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getArrayOfValues = (options) => options.map(option => option.name)\r\n\r\n  selectOption = (newOption) => {\r\n    const { inputValue } = this.state;\r\n\r\n    const newSelectedOptions = this.getNewSelectedOptions({ type: 1, newOption })\r\n\r\n    this.setState({\r\n      selectedOptions: newSelectedOptions,\r\n      filteredOptions: this.getNewFilteredOptions({ type: 1, inputValue, changeableOption: newOption }),\r\n      inputValue: '',\r\n      ...this.getResetScrollState()\r\n    });\r\n\r\n    this.scrollAtOption(0, 0)\r\n\r\n    const arrayOfValues = this.getArrayOfValues(newSelectedOptions)\r\n    this.props.onChange(arrayOfValues)\r\n  }\r\n\r\n  unselectOption = (option, deletedIndex) => {\r\n    const { inputValue } = this.state;\r\n\r\n    const newSelectedOptions = this.getNewSelectedOptions({ type: 2, deletedIndex })\r\n\r\n    this.setState({\r\n      selectedOptions: newSelectedOptions,\r\n      filteredOptions: this.getNewFilteredOptions({ type: 3, inputValue, changeableOption: option }),\r\n    });\r\n\r\n    const arrayOfValues = this.getArrayOfValues(newSelectedOptions)\r\n    this.props.onChange(arrayOfValues)\r\n  }\r\n\r\n  getNewSelectedOptions = ({ type, deletedIndex, newOption }) => {\r\n    const { selectedOptions } = this.state\r\n\r\n    let newSelectedOptions = [...selectedOptions]\r\n\r\n    // В случае добавления опции в список (параметр deletedIndex не нужен, добавляем в конец массива)\r\n    if (type === 1) {\r\n      newSelectedOptions.push(newOption)\r\n    }\r\n    // В случае удаления опции из списка выбранных\r\n    else if (type === 2) {\r\n      newSelectedOptions.splice(deletedIndex, 1);\r\n    }\r\n\r\n    return newSelectedOptions\r\n  }\r\n\r\n  getNewFilteredOptions = ({ type, inputValue, changeableOption }) => {\r\n    const { options, filteredOptions, selectedOptions } = this.state;\r\n    let newFilteredOptions = []\r\n\r\n    // В случае добавления опции в список выбранных\r\n    if (type === 1) {\r\n      newFilteredOptions = filteredOptions\r\n        .filter(option => option.id !== changeableOption.id)\r\n    }\r\n    // В случае изменения значения инпута (3-й параметр не нужен)\r\n    else if (type === 2) {\r\n      let newSelectedOptionsIds = selectedOptions.map(option => option.id)\r\n\r\n      newFilteredOptions = options\r\n        .filter(option => option.name.toUpperCase().includes(inputValue.toUpperCase()))\r\n        .filter(option => !newSelectedOptionsIds.includes(option.id))\r\n    }\r\n    // В случае удаления опции из списка выбранных\r\n    else if (type === 3) {\r\n      newFilteredOptions = [...filteredOptions];\r\n\r\n      if (changeableOption.name.includes(inputValue)) {\r\n        let insertIndex = newFilteredOptions.findIndex((filteredOption) => filteredOption.id > changeableOption.id);\r\n\r\n        if (insertIndex !== -1) {\r\n          newFilteredOptions.splice(insertIndex, 0, { id: changeableOption.id, name: changeableOption.name });\r\n        } else {\r\n          newFilteredOptions.push({ id: changeableOption.id, name: changeableOption.name });\r\n        }\r\n      }\r\n    }\r\n\r\n    return newFilteredOptions\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const inputValue = event.target.value\r\n\r\n    this.setState({\r\n      filteredOptions: this.getNewFilteredOptions({ type: 2, inputValue }),\r\n      inputValue,\r\n      ...this.getResetScrollState()\r\n    });\r\n\r\n    this.scrollAtOption(0, 0)\r\n  }\r\n\r\n  onMouseOverFilteredOption = (index) => {\r\n    const {\r\n      scrollMaxPos,\r\n      isScrollingByKeyboard\r\n    } = this.state;\r\n\r\n    if (isScrollingByKeyboard) return\r\n\r\n    this.setState(previousState => {\r\n      let newScrollPos = previousState.scrollPos + (index - previousState.highlightOptionIndex);\r\n      if (newScrollPos < 0) {\r\n        newScrollPos = 0;\r\n      } else if (newScrollPos > scrollMaxPos) {\r\n        newScrollPos = scrollMaxPos;\r\n      }\r\n\r\n      return {\r\n        highlightOptionIndex: index,\r\n        scrollPos: newScrollPos\r\n      }\r\n    });\r\n  }\r\n\r\n  onInputKeyDown = (event) => {\r\n    const {\r\n      highlightOptionIndex,\r\n      filteredOptions,\r\n      selectedOptions,\r\n      inputValue\r\n    } = this.state;\r\n\r\n    if (event.keyCode === 8 && !inputValue && selectedOptions.length) {\r\n      const lastIndex = selectedOptions.length - 1;\r\n      this.unselectOption(selectedOptions[lastIndex], lastIndex);\r\n    }\r\n\r\n    if (event.key === 'Escape') {\r\n      this.inputRef.current.blur();\r\n    }\r\n\r\n    if ((event.keyCode === 38 || event.keyCode === 40) && filteredOptions.length > 1) {\r\n      event.preventDefault()\r\n\r\n      this.scrollManaging(event);\r\n    }\r\n\r\n    if (event.key === \"Enter\" && filteredOptions.length) {\r\n      this.selectOption(filteredOptions[highlightOptionIndex], highlightOptionIndex);\r\n    }\r\n  }\r\n\r\n  onClickSelectedOptions = () => {\r\n    this.inputRef.current.focus();\r\n  }\r\n\r\n  onMouseDownSelectedOption = (event, option, index) => {\r\n    event.preventDefault()\r\n\r\n    if (event.button === 1) {\r\n      this.unselectOption(option, index)\r\n    }\r\n  }\r\n\r\n  onClickSelectedOptionCloseBtn = (event, option, index) => {\r\n    event.stopPropagation();\r\n\r\n    this.unselectOption(option, index)\r\n  }\r\n\r\n  onMouseDownFilteredOption = (event, option) => {\r\n    event.preventDefault()\r\n\r\n    this.selectOption(option)\r\n  }\r\n\r\n  onMouseMoveFilteredOptions = () => {\r\n    const { isScrollingByKeyboard } = this.state\r\n    if (isScrollingByKeyboard) {\r\n      this.setState({\r\n        isScrollingByKeyboard: false\r\n      })\r\n    }\r\n  }\r\n\r\n  renderSelectedOptions = () => {\r\n    const { selectedOptions, inputValue } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"selected-options\"\r\n        onClick={this.onClickSelectedOptions}\r\n      >\r\n        {selectedOptions.map((option, index) => (\r\n          <span\r\n            key={option.id}\r\n            onMouseDown={(event) => this.onMouseDownSelectedOption(event, option, index)}\r\n          >\r\n            {option.name}\r\n            <button onClick={(event) => this.onClickSelectedOptionCloseBtn(event, option, index)}>✖</button>\r\n          </span>\r\n        ))}\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onInputChange}\r\n          onFocus={this.toggleOptionsList}\r\n          onBlur={this.toggleOptionsList}\r\n          onKeyDown={this.onInputKeyDown}\r\n          value={inputValue}\r\n          ref={this.inputRef}\r\n          className=\"input\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilteredOptions = () => {\r\n    const {\r\n      filteredOptions,\r\n      isOptionsListOpen,\r\n      highlightOptionIndex\r\n    } = this.state;\r\n\r\n    return isOptionsListOpen && (\r\n      <div\r\n        className=\"filtered-options\"\r\n        onMouseMove={this.onMouseMoveFilteredOptions}\r\n      >\r\n        {filteredOptions.map((option, index) => (\r\n          <span\r\n            key={option.id}\r\n            onMouseDown={(event) => this.onMouseDownFilteredOption(event, option)}\r\n            className={highlightOptionIndex === index ? 'highlight' : null}\r\n            onMouseOver={() => this.onMouseOverFilteredOption(index)}\r\n          >{option.name}</span>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>{placeholder}</h2>\r\n        <div className={`multiselect-container ${this.props.containerClassName || ''}`}>\r\n          {this.renderSelectedOptions()}\r\n          {this.renderFilteredOptions()}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMultiselect.propTypes = {\r\n  containerClassName: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nMultiselect.defaultProps = {\r\n  placeholder: 'Multiselect dropdown',\r\n  options: [],\r\n  onChange: () => {}\r\n}\r\n","export const randomOptions = [\r\n  'option-1',\r\n  'option-2',\r\n  'option-3',\r\n  'option-4',\r\n  'option-5',\r\n  'option-6',\r\n  'option-7',\r\n  'option-8',\r\n  'option-9',\r\n  'option-10',\r\n  'option-11',\r\n  'option-12',\r\n  'option-13',\r\n  'option-14',\r\n  'option-15',\r\n  'option-16',\r\n  'option-17',\r\n  'option-18',\r\n  'option-19',\r\n  'option-20',\r\n  'option-21',\r\n  'option-22',\r\n  'option-23',\r\n  'option-24',\r\n  'option-25',\r\n  'option-26',\r\n  'option-27',\r\n  'option-28',\r\n  'option-29',\r\n  'option-30',\r\n  'option-31',\r\n  'option-32',\r\n  'option-33',\r\n  'option-34',\r\n  'option-35',\r\n  'option-36',\r\n  'option-37',\r\n  'option-38',\r\n  'option-39',\r\n  'option-40',\r\n  'option-41',\r\n  'option-42',\r\n  'option-43',\r\n  'option-44',\r\n  'option-45',\r\n  'option-46',\r\n  'option-47',\r\n  'option-48',\r\n  'option-49',\r\n  'option-50',\r\n  'option-51',\r\n  'option-52',\r\n  'option-53',\r\n  'option-54',\r\n  'option-55',\r\n  'option-56',\r\n  'option-57',\r\n  'option-58',\r\n  'option-59',\r\n  'option-60',\r\n  'option-61',\r\n  'option-62',\r\n  'option-63',\r\n  'option-64',\r\n  'option-65',\r\n  'option-66',\r\n  'option-67',\r\n  'option-68',\r\n  'option-69',\r\n  'option-70',\r\n  'option-71',\r\n  'option-72',\r\n  'option-73',\r\n  'option-74',\r\n  'option-75',\r\n  'option-76',\r\n  'option-77',\r\n  'option-78',\r\n  'option-79',\r\n  'option-80',\r\n  'option-81',\r\n  'option-82',\r\n  'option-83',\r\n  'option-84',\r\n  'option-85',\r\n  'option-86',\r\n  'option-87',\r\n  'option-88',\r\n  'option-89',\r\n  'option-90',\r\n  'option-91',\r\n  'option-92',\r\n  'option-93',\r\n  'option-94',\r\n  'option-95',\r\n  'option-96',\r\n  'option-97',\r\n  'option-98',\r\n  'option-99',\r\n  'option-100'\r\n]\r\n\r\nexport const countries = [\r\n  'Afghanistan',\r\n  'Albania',\r\n  'Algeria',\r\n  'American Samoa',\r\n  'Andorra',\r\n  'Angola',\r\n  'Anguilla',\r\n  'Antigua and Barbuda',\r\n  'Argentina',\r\n  'Armenia',\r\n  'Aruba',\r\n  'Australia',\r\n  'Austria',\r\n  'Azerbaijan',\r\n  'Bangladesh',\r\n  'Barbados',\r\n  'Bahamas',\r\n  'Bahrain',\r\n  'Belarus',\r\n  'Belgium',\r\n  'Belize',\r\n  'Benin',\r\n  'Bermuda',\r\n  'Bhutan',\r\n  'Bolivia',\r\n  'Bosnia and Herzegovina',\r\n  'Botswana',\r\n  'Brazil',\r\n  'British Indian Ocean Territory',\r\n  'British Virgin Islands',\r\n  'Brunei Darussalam',\r\n  'Bulgaria',\r\n  'Burkina Faso',\r\n  'Burma',\r\n  'Burundi',\r\n  'Cambodia',\r\n  'Cameroon',\r\n  'Canada',\r\n  'Cape Verde',\r\n  'Cayman Islands',\r\n  'Central African Republic',\r\n  'Chad',\r\n  'Chile',\r\n  'China',\r\n  'Christmas Island',\r\n  'Cocos (Keeling) Islands',\r\n  'Colombia',\r\n  'Comoros',\r\n  'Congo-Brazzaville',\r\n  'Congo-Kinshasa',\r\n  'Cook Islands',\r\n  'Costa Rica',\r\n  'Croatia',\r\n  'Cura?ao',\r\n  'Cyprus',\r\n  'Czech Republic',\r\n  'Denmark',\r\n  'Djibouti',\r\n  'Dominica',\r\n  'Dominican Republic',\r\n  'East Timor',\r\n  'Ecuador',\r\n  'El Salvador',\r\n  'Egypt',\r\n  'Equatorial Guinea',\r\n  'Eritrea',\r\n  'Estonia',\r\n  'Ethiopia',\r\n  'Falkland Islands',\r\n  'Faroe Islands',\r\n  'Federated States of Micronesia',\r\n  'Fiji',\r\n  'Finland',\r\n  'France',\r\n  'French Guiana',\r\n  'French Polynesia',\r\n  'French Southern Lands',\r\n  'Gabon',\r\n  'Gambia',\r\n  'Georgia',\r\n  'Germany',\r\n  'Ghana',\r\n  'Gibraltar',\r\n  'Greece',\r\n  'Greenland',\r\n  'Grenada',\r\n  'Guadeloupe',\r\n  'Guam',\r\n  'Guatemala',\r\n  'Guernsey',\r\n  'Guinea',\r\n  'Guinea-Bissau',\r\n  'Guyana',\r\n  'Haiti',\r\n  'Heard and McDonald Islands',\r\n  'Honduras',\r\n  'Hong Kong',\r\n  'Hungary',\r\n  'Iceland',\r\n  'India',\r\n  'Indonesia',\r\n  'Iraq',\r\n  'Ireland',\r\n  'Isle of Man',\r\n  'Israel',\r\n  'Italy',\r\n  'Jamaica',\r\n  'Japan',\r\n  'Jersey',\r\n  'Jordan',\r\n  'Kazakhstan',\r\n  'Kenya',\r\n  'Kiribati',\r\n  'Kuwait',\r\n  'Kyrgyzstan',\r\n  'Laos',\r\n  'Latvia',\r\n  'Lebanon',\r\n  'Lesotho',\r\n  'Liberia',\r\n  'Libya',\r\n  'Liechtenstein',\r\n  'Lithuania',\r\n  'Luxembourg',\r\n  'Macau',\r\n  'Macedonia',\r\n  'Madagascar',\r\n  'Malawi',\r\n  'Malaysia',\r\n  'Maldives',\r\n  'Mali',\r\n  'Malta',\r\n  'Marshall Islands',\r\n  'Martinique',\r\n  'Mauritania',\r\n  'Mauritius',\r\n  'Mayotte',\r\n  'Mexico',\r\n  'Moldova',\r\n  'Monaco',\r\n  'Mongolia',\r\n  'Montenegro',\r\n  'Montserrat',\r\n  'Morocco',\r\n  'Mozambique',\r\n  'Namibia',\r\n  'Nauru',\r\n  'Nepal',\r\n  'Netherlands',\r\n  'New Caledonia',\r\n  'New Zealand',\r\n  'Nicaragua',\r\n  'Niger',\r\n  'Nigeria',\r\n  'Niue',\r\n  'Norfolk Island',\r\n  'Northern Mariana Islands',\r\n  'Norway',\r\n  'Oman',\r\n  'Pakistan',\r\n  'Palau',\r\n  'Panama',\r\n  'Papua New Guinea',\r\n  'Paraguay',\r\n  'Peru',\r\n  'Philippines',\r\n  'Pitcairn Islands',\r\n  'Poland',\r\n  'Portugal',\r\n  'Puerto Rico',\r\n  'Qatar',\r\n  'R?union',\r\n  'Romania',\r\n  'Russia',\r\n  'Rwanda',\r\n  'Saint Barth?lemy',\r\n  'Saint Helena',\r\n  'Saint Kitts and Nevis',\r\n  'Saint Lucia',\r\n  'Saint Martin',\r\n  'Saint Pierre and Miquelon',\r\n  'Saint Vincent',\r\n  'Samoa',\r\n  'San Marino',\r\n  'S?o Tom? and Pr?ncipe',\r\n  'Saudi Arabia',\r\n  'Senegal',\r\n  'Serbia',\r\n  'Seychelles',\r\n  'Sierra Leone',\r\n  'Singapore',\r\n  'Sint Maarten',\r\n  'Slovakia',\r\n  'Slovenia',\r\n  'Solomon Islands',\r\n  'Somalia',\r\n  'South Africa',\r\n  'South Georgia',\r\n  'South Korea',\r\n  'Spain',\r\n  'Sri Lanka',\r\n  'Sudan',\r\n  'Suriname',\r\n  'Svalbard and Jan Mayen',\r\n  'Sweden',\r\n  'Swaziland',\r\n  'Switzerland',\r\n  'Syria',\r\n  'Taiwan',\r\n  'Tajikistan',\r\n  'Tanzania',\r\n  'Thailand',\r\n  'Togo',\r\n  'Tokelau',\r\n  'Tonga',\r\n  'Trinidad and Tobago',\r\n  'Tunisia',\r\n  'Turkey',\r\n  'Turkmenistan',\r\n  'Turks and Caicos Islands',\r\n  'Tuvalu',\r\n  'Uganda',\r\n  'Ukraine',\r\n  'United Arab Emirates',\r\n  'United Kingdom',\r\n  'United States',\r\n  'Uruguay',\r\n  'Uzbekistan',\r\n  'Vanuatu',\r\n  'Vatican City',\r\n  'Vietnam',\r\n  'Venezuela',\r\n  'Wallis and Futuna',\r\n  'Western Sahara',\r\n  'Yemen',\r\n  'Zambia',\r\n  'Zimbabwe'\r\n]\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Multiselect } from './Multiselect';\r\n\r\nimport { countries, randomOptions } from './options'\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{ width: '400px', margin: '200px auto' }}>\r\n      <Multiselect\r\n        containerClassName={'top'}\r\n        placeholder='Выберите страны'\r\n        options={countries}\r\n        onChange={(selectedOptions) => { console.log('Selected countries - ', selectedOptions)}}\r\n      />\r\n\r\n      <Multiselect\r\n        containerClassName={'bottom'}\r\n        placeholder='Рандомные опции'\r\n        options={randomOptions}\r\n        onChange={(selectedOptions) => { console.log('Selected random options - ', selectedOptions)}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}